% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BatMan.R
\name{BatMan}
\alias{BatMan}
\title{Build survival prediction model based on training data using BatMan or ComBat along with normalization and calculate concordance index based on test data.}
\usage{
BatMan(
  data_train,
  data_test,
  nonzero_beta_position = NULL,
  b0value = NULL,
  batch_id_train,
  batch_id_test,
  ps_mean_cutoff = 8,
  ps_rho_cutoff = 0.9,
  BatMan_train,
  BatMan_test,
  cmbt_train,
  cmbt_test,
  norm_type,
  norm_train,
  norm_test,
  univ_cutoff_range = c(0, 0.05),
  nuniv_cutoff = 20,
  lambda_max_glmnet = 0.3,
  nlambda = 30,
  nfold = 6
)
}
\arguments{
\item{data_train}{training dataset containing miRNA expression data and survival outcome. The first three columns need to be subject id, survival time, and censoring status (1=event, 0=censor), respectively. Expression data need to start at the fourth column.}

\item{data_test}{test dataset containing miRNA expression data and survival outcome. The first three columns need to be subject id, survival time, and censoring status, respectively. Expression data need to start at the fourth column.}

\item{nonzero_beta_position}{positions in the true \eqn{\beta} that have nonzero values. Only provide this argument if the true model is known.}

\item{b0value}{vector of nonzero values corresponding to \code{nonzero_beta_position}. Only provide this argument if the true model is known.}

\item{batch_id_train}{vector of batch id for all subjects in the training dataset indicating their batch membership. The length of the vector should be the size of the training dataset.}

\item{batch_id_test}{vector of batch id for all subjects in the test dataset indicating their batch membership. The length of the vector should be the size of the test dataset.}

\item{ps_mean_cutoff}{cutoff of mean expression level during pre-screening (default=8). Features with mean expression in the training dataset below this cutoff will be excluded during pre-screening.}

\item{ps_rho_cutoff}{cutoff of correlation coefficient during pre-screening (default=0.9).}

\item{BatMan_train}{0 if no BatMan is used on training data; 1 otherwise.}

\item{BatMan_test}{0 if no BatMan is used to calculate C-index from test data; 1 otherwise.}

\item{cmbt_train}{0 if no ComBat is used on training data; 1 otherwise.}

\item{cmbt_test}{0 if no ComBat is used to calculate C-index from test data; 1 otherwise.}

\item{norm_type}{normalization methods (0: no normalization; 1: median normalization; 2: quantile normalization; 3: Variance stabilizing transformation (VSN).}

\item{norm_train}{0 if no normalization applied to training data; 1 otherwise. Ignored if \code{norm_type=0}.}

\item{norm_test}{0 if no normalization applied to test data; 1 otherwise. Ignored if \code{norm_type=0}.}

\item{univ_cutoff_range}{range of cutoffs of p values for univariate analysis (default=\code{c(0,0.05)}).}

\item{nuniv_cutoff}{number of equal-spaced cutoff values in \code{univ_cutoff_range} (default=20).}

\item{lambda_max_glmnet}{maximum value of grid-search range of tuning parameter lambda in lasso and adaptive lasso (default=0.3).}

\item{nlambda}{number of equal-sapced lambda values in \code{lambda_max_glmnet} (default=30).}

\item{nfold}{number of folds for the cross-validation for tuning parameter selection in lasso and adaptive lasso (default=6).}
}
\value{
An object of class \code{BatMan.result} containing estimated regression coefficients and C-indices for each variable selection method.
\item{bhat_oracle}{estimated regression coefficients from oracle method (only available for the true model is known)}
\item{bhat_univ}{estimated regression coefficients from univariate method}
\item{bhat_lasso}{estimated regression coefficients from lasso method}
\item{bhat_alasso}{estimated regression coefficients from adaptive lasso method}
\item{c_stats}{concordance indices (C-indices) based on test data from all variable selection methods}
\item{lambdas}{selected tuning parameter lambda for Lasso and adaptive Lasso methods}
\item{subset_size}{the sizes of data used for variable selection after pre-screening}
\item{bhat_oracle_BatMan}{estimated regression coefficients from oracle method with BatMan}
\item{bhat_univ_BatMan}{estimated regression coefficients from univariate method with BatMan}
\item{bhat_lasso_BatMan}{estimated regression coefficients from lasso method with BatMan}
\item{bhat_alasso_BatMan}{estimated regression coefficients from adaptive with BatMan}
\item{c_stats_BatMan}{C-indices from all four variable selection methods based on test data with BatMan}
\item{lambdas_BatMan}{selected tuning parameter lambda for Lasso and adaptive Lasso methods with BatMan}
\item{bhat_oracle_ComBat}{estimated regression coefficients from oracle method with ComBat}
\item{bhat_univ_ComBat}{estimated regression coefficients from univariate method with ComBat}
\item{bhat_lasso_ComBat}{estimated regression coefficients from lasso method with ComBat}
\item{bhat_alasso_ComBat}{estimated regression coefficients from adaptive lasso method with ComBat}
\item{c_stats_ComBat}{C-indices from all four methods based on test data with ComBat}
\item{lambdas_ComBat}{selected tuning parameter lambda for Lasso and adaptive Lasso methods with ComBat}
\item{subset_size_ComBat}{the sizes of data used for variable selection after pre-screening with ComBat}
}
\description{
\code{BatMan} builds a survival prediction model based on training data using BatMan or ComBat along with three optional normalization methods
(median normalization, quantile normalization, Variance stabilizing transformation). Four variable selection methods (oracle, univariate screening,
lasso, adaptive lasso) are available to build a parsimonious model. Oracle method is only available when \code{nonzero_beta_position} and \code{b0value}
are provided. This is usually the case when the data is simulated so that the true model is known.
The survival prediction model is applied to the test data to calculate a concordance index (C-index) as a measure of prediction accuracy.
}
\examples{
## Build a survival prediction model using a simulated training dataset. BatMan and median normalization are used to correct for batch effects. Prediction accuracy
is measured by C-index calculated from applying the survival prediction model to a simulated test dataset. The test dataset is also subjected to BatMan and median
normalization.
data_sim=data_simulation(be.survival, he, nonzero_beta_position=c(385,866,1010,2218,2660,3026), 
b0value=c(1.04,1.40,1.45,1.62,3.13,1.76), batch_level="slides", t_sort_train=0, t_sort_test=0, 
t_rev=0, he_train=1, he_test=0, he_train_scale=1, he_test_scale=1, seed=123)
data_train=data_sim[[1]]
batch_id_train=data_sim[[2]]
data_test=data_sim[[3]]
batch_id_test=data_sim[[4]]
fit1=BatMan(data_train, data_test, nonzero_beta_position=c(385,866,1010,2218,2660,3026), b0value=c(1.04,1.40,1.45,1.62,3.13,1.76), 
batch_id_train=batch_id_train, batch_id_test=batch_id_test, BatMan_train=1, BatMan_test=1, cmbt_train=0, cmbt_test=0, norm_type=1, norm_train=1, norm_test=1)
}
\references{
Ni, A., Qin, L. (2021) "Performance Evaluation of Transcriptomics Data Normalization for Survival Risk Prediction". \emph{Briefings in Bioinformatics}, 22(6), bbab257.
}
