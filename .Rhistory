dat$date_vte=ifelse(dat$VTE_DATE=="","12/31/2019", dat$VTE_DATE)
dat$date_vte=as.Date(dat$date_vte, "%m/%d/%Y")
dat$vte=0
dat$vte[dat$VTE=="Venous Thromboembolism"]=1
dat$time_vte=as.numeric(dat$date_vte - dat$date_start)/365.25
dat$time_vte[dat$time_vte<0]=0
dat$date_ais=ifelse(dat$Acute_Ischemic_Stroke_DATE=="","12/31/2019", dat$Acute_Ischemic_Stroke_DATE)
dat$date_ais=as.Date(dat$date_ais, "%m/%d/%Y")
dat$ais=0
dat$ais[dat$Acute.Ischemic.Stroke=="Acute Ischemic Stroke"]=1
dat$time_ais=as.numeric(dat$date_ais - dat$date_start)/365.25
dat$time_ais[dat$time_ais<0]=0
dat$date_stroke=ifelse(dat$Major_Stroke_DATE=="","12/31/2019", dat$Major_Stroke_DATE)
dat$date_stroke=as.Date(dat$date_stroke, "%m/%d/%Y")
dat$stroke=0
dat$stroke[dat$Major.Stroke=="Major Stroke"]=1
dat$time_stroke=as.numeric(dat$date_stroke - dat$date_start)/365.25
dat$time_stroke[dat$time_stroke<0]=0
dat$date_mi=ifelse(dat$Myocardial_infarction_DATE=="","12/31/2019", dat$Myocardial_infarction_DATE)
dat$date_mi=as.Date(dat$date_mi, "%m/%d/%Y")
dat$mi=0
dat$mi[dat$Myocardial.infarction=="Myocardial infarction"]=1
dat$time_mi=as.numeric(dat$date_mi - dat$date_start)/365.25
dat$time_mi[dat$time_mi<0]=0
dat$date_hosp=ifelse(dat$Earlist_Hospitalization_dt=="","12/31/2019", dat$Earlist_Hospitalization_dt)
dat$date_hosp=as.Date(dat$date_hosp, "%m/%d/%Y")
dat$hosp=0
dat$hosp[dat$Hospitalization=="Y"]=1
dat$time_hosp=as.numeric(dat$date_hosp - dat$date_start)/365.25
dat$time_hosp[dat$time_hosp<0]=0
dat$date_death=ifelse(dat$DEATH_DATE=="","12/31/2019", dat$DEATH_DATE)
dat$date_death=as.Date(dat$date_death, "%m/%d/%Y")
dat$death=0
dat$death[dat$death_flag=="Y"]=1
dat$time_death=as.numeric(dat$date_death - dat$date_start)/365.25
dat$time_death[dat$time_death<0]=0
dat$safe_comp=1*((dat$gasbleed+dat$intrableed)>=1)
dat$time_safe_comp=min(dat$time_gasbleed, dat$time_intrableed)
dat$eff_comp=1*((dat$vte+dat$ais+dat$stroke+dat$mi+dat$hosp+dat$death)>=1)
dat$time_eff_comp=min(dat$time_vte, dat$time_ais, dat$time_stroke, dat$time_mi, dat$time_hosp, dat$time_death)
## cap wt at 300lbs and ht at 6.5" according to Macarius's email on 2/10/2021
dat$BMI[dat$BMI>200 & !is.na(dat$BMI)]=NA
dat$ht=sqrt(dat$wt_in_pounds*703/dat$BMI)
dat=dat[(dat$ht<=77 | is.na(dat$ht)) & (dat$wt_in_pounds<=300 | is.na(dat$wt_in_pounds)),]
dat$ht[dat$ht<50 & !is.na(dat$ht)]=NA
dat$htcm=dat$ht*2.54 # height in cm
dat$lbm=-14.729-0.071*dat$PT_AGE+0.210*dat$htcm+0.468*dat$wt_in_pounds+1.821*(dat$race3==1)+2.96
## categorize confounders according to Macarius's email on 2/10/2021
dat$inr=as.numeric(dat$INR_VALUE)
dat$inrcat[dat$inr<2 | dat$INR_VALUE=="<1.0"]=0
dat$inrcat[dat$inr>=2 & dat$inr<=3]=1
dat$inrcat[dat$inr>3 & dat$inr<4.9]=2
dat$inrcat[dat$inr>=4.9 | dat$INR_VALUE %in% c(">14.4",">14.7",">14.9",">15.0",">7.0")]=3
dat$inrcat[is.na(dat$inr)]=4
dat$cre=as.numeric(dat$Creatinine_VALUE)
dat$crecat[dat$cre<0.63 | dat$Creatinine_VALUE %in% c("<0.20","<0.30")]=0
dat$crecat[dat$cre>=0.63 & dat$cre<=1.16]=1
dat$crecat[dat$cre>1.16 | dat$Creatinine_VALUE %in% c(">25.00",">300")]=2
dat$crecat[is.na(dat$cre)]=3
dat$alb=as.numeric(dat$ALBUMIN_VALUE)
dat$albcat[dat$alb<3.4 | dat$ALBUMIN_VALUE %in% c("<1.0","<1.3","<1.5","<2.0","<3")]=0
dat$albcat[dat$alb>=3.4 & dat$alb<=5.4]=1
dat$albcat[dat$alb>5.4 | dat$ALBUMIN_VALUE==">4500.0"]=2
dat$albcat[is.na(dat$alb)]=3
dat$crp=as.numeric(dat$C_REACTIVE_PROTIEN_VALUE)
dat$crpcat[dat$crp<0.3 | dat$C_REACTIVE_PROTIEN_VALUE %in% c("<0.2","<0.20")]=0
dat$crpcat[dat$crp>=0.3 & dat$crp<=1]=1
dat$crpcat[dat$crp>1 & dat$crp<=10]=2
dat$crpcat[dat$crp>10]=3
dat$crpcat[is.na(dat$crp)]=4
datsub_bmi=na.omit(dat[,c("MRNNO","PT_AGE","yr_ant_init", "race4", "BMI", "alcohol", "bleed", "liver", "obpul", "renal", "heart", "chd", "diab","hyper", "peptic", "valv", "fall", "hip", "inrcat", "albcat", "crecat", "crpcat", "gender","med","time_safe_comp", "safe_comp","time_eff_comp", "eff_comp")])
datsub_lbm=na.omit(dat[,c("MRNNO","PT_AGE","yr_ant_init", "race4", "lbm", "alcohol", "bleed", "liver", "obpul", "renal", "heart", "chd", "diab","hyper", "peptic", "valv", "fall", "hip", "inrcat", "albcat", "crecat", "crpcat", "gender","med","time_safe_comp", "safe_comp","time_eff_comp", "eff_comp")])
## function to calculate p value for Table 1
# rndr <- function(x, name, ...) {
#     if (length(x) == 0) {
#         y <- dat[[name]]
#         s <- rep("", length(render.default(x=y, name=name, ...)))
#         if (is.numeric(y)) {
#             p <- t.test(y ~ dat$medcat)$p.value
#         } else {
#             p <- chisq.test(table(y, dat$medcat))$p.value
#         }
#         s[2] <- sub("<", "&lt;", format.pval(p, digits=3, eps=0.001))
#         s
#     } else {
#         render.default(x=x, name=name, ...)
#     }
# }
#
# rndr.strat <- function(label, n, ...) {
#     ifelse(n==0, label, render.strat.default(label, n, ...))
# }
## propensity score estimation
datsub_bmi$ps_bmi=glm(med~PT_AGE+factor(yr_ant_init)+factor(race4)+BMI+alcohol+bleed+liver+obpul+renal+heart+chd+diab
+hyper+peptic+valv+fall+hip+factor(inrcat)+factor(albcat)+factor(crecat)+factor(crpcat)+gender, data=datsub_bmi, family="binomial")$fitted.values
datsub_bmi$ipw_bmi=ifelse(datsub_bmi$med==1, 1/datsub_bmi$ps_bmi, 1/(1-datsub_bmi$ps_bmi))
#datsub_bmi=datsub_bmi[datsub_bmi$ipw_bmi<150,]
datsub_lbm$ps_lbm=glm(med~PT_AGE+factor(yr_ant_init)+factor(race4)+lbm+alcohol+bleed+liver+obpul+renal+heart+chd+diab
+hyper+peptic+valv+fall+hip+factor(inrcat)+factor(albcat)+factor(crecat)+factor(crpcat)+gender, data=datsub_lbm, family="binomial")$fitted.values
datsub_lbm$ipw_lbm=ifelse(datsub_lbm$med==1, 1/datsub_lbm$ps_lbm, 1/(1-datsub_lbm$ps_lbm))
coxfit_overall_safe_lbm=coxph(Surv(time_safe_comp, safe_comp)~med, weights=ipw_lbm, data=datsub_lbm)
# summary(coxfit_overall_safe_lbm)$coefficients
coxfit_overall_eff_lbm=coxph(Surv(time_eff_comp, eff_comp)~med, weights=ipw_lbm, data=datsub_lbm)
# summary(coxfit_overall_eff_lbm)$coefficients
tab_model(coxfit_overall_safe_lbm, coxfit_overall_eff_lbm, dv.labels=c("Safety outcome", "Efficacy outcome"), string.est="Hazard ratio")
coxfit_3way_sex_lbm_safe=coxph(Surv(time_safe_comp, safe_comp)~gender*lbm*med, weights=ipw_lbm, data=datsub_lbm)
summary(coxfit_3way_sex_lbm_safe)
coxfit_3way_sex_lbm_eff=coxph(Surv(time_eff_comp, eff_comp)~gender*lbm*med, weights=ipw_lbm, data=datsub_lbm)
summary(coxfit_3way_sex_lbm_eff)
cor(dat$BMI, dat$lbm)
cor(dat$BMI, dat$lbm, na.rm=T)
cor(na.omit(dat[,c("BMI","lbm")]))
boxplot(dat$BMI~dat$GENDER)
boxplot(dat$lbm~dat$GENDER)
datsub=na.omit(dat[,c("MRNNO","PT_AGE","yr_ant_init", "race4", "lbm","BMI", "alcohol", "bleed", "liver", "obpul", "renal", "heart", "chd", "diab","hyper", "peptic", "valv", "fall", "hip", "inrcat", "albcat", "crecat", "crpcat", "gender","med","time_safe_comp", "safe_comp","time_eff_comp", "eff_comp")])
datsub$ps=glm(med~PT_AGE+factor(yr_ant_init)+factor(race4)+lbm+BMI+alcohol+bleed+liver+obpul+renal+heart+chd+diab
+hyper+peptic+valv+fall+hip+factor(inrcat)+factor(albcat)+factor(crecat)+factor(crpcat)+gender, data=datsub, family="binomial")$fitted.values
datsub$ipw=ifelse(datsub$med==1, 1/datsub$ps, 1/(1-datsub$ps))
hist(datsub$ipw)
range(datsub$ipw)
coxfit_overall_safe=coxph(Surv(time_safe_comp, safe_comp)~med, weights=ipw, data=datsub)
dim(datsub)
summary(coxfit_overall_safe_bmi)$coefficients
coxfit_overall_eff=coxph(Surv(time_eff_comp, eff_comp)~med, weights=ipw, data=datsub)
summary(coxfit_overall_eff_bmi)$coefficients
tab_model(coxfit_overall_safe_bmi, coxfit_overall_eff_bmi, dv.labels=c("Safety outcome", "Efficacy outcome"), string.est="Hazard ratio")
?tab_model
tab_model(coxfit_overall_safe_bmi, coxfit_overall_eff_bmi, dv.labels=c("Safety outcome", "Efficacy outcome"), string.est="Hazard ratio",show.r2=F)
table1(~PT_AGE+factor(GENDER)+factor(yr_ant_init)+ht+wt_in_pounds+lbm+BMI+factor(alcohol)+factor(bleed)+factor(liver)+factor(obpul)+factor(renal)+factor(heart)+factor(chd)+factor(diab)+factor(hyper)+factor(peptic)+factor(valv)+factor(fall)+factor(hip)+factor(inrcat)+factor(albcat)+factor(crecat)+factor(crpcat)+factor(race3)+factor(safe_comp)+time_safe_comp+factor(eff_comp)+time_eff_comp|medcat, data=datsub)
table1(~PT_AGE+factor(gender)+factor(yr_ant_init)+ht+wt_in_pounds+lbm+BMI+factor(alcohol)+factor(bleed)+factor(liver)+factor(obpul)+factor(renal)+factor(heart)+factor(chd)+factor(diab)+factor(hyper)+factor(peptic)+factor(valv)+factor(fall)+factor(hip)+factor(inrcat)+factor(albcat)+factor(crecat)+factor(crpcat)+factor(race3)+factor(safe_comp)+time_safe_comp+factor(eff_comp)+time_eff_comp|medcat, data=datsub)
datsub_bmi=na.omit(dat[,c("MRNNO","PT_AGE","yr_ant_init", "race4", "ht", "wt_in_pounds", "BMI", "alcohol", "bleed", "liver", "obpul", "renal", "heart", "chd", "diab","hyper", "peptic", "valv", "fall", "hip", "inrcat", "albcat", "crecat", "crpcat", "gender","med","time_safe_comp", "safe_comp","time_eff_comp", "eff_comp")])
datsub_lbm=na.omit(dat[,c("MRNNO","PT_AGE","yr_ant_init", "race4", "ht", "wt_in_pounds", "lbm", "alcohol", "bleed", "liver", "obpul", "renal", "heart", "chd", "diab","hyper", "peptic", "valv", "fall", "hip", "inrcat", "albcat", "crecat", "crpcat", "gender","med","time_safe_comp", "safe_comp","time_eff_comp", "eff_comp")])
datsub=na.omit(dat[,c("MRNNO","PT_AGE","yr_ant_init", "race4", "ht", "wt_in_pounds", "lbm","BMI", "alcohol", "bleed", "liver", "obpul", "renal", "heart", "chd", "diab","hyper", "peptic", "valv", "fall", "hip", "inrcat", "albcat", "crecat", "crpcat", "gender","med","time_safe_comp", "safe_comp","time_eff_comp", "eff_comp")])
table1(~PT_AGE+factor(gender)+factor(yr_ant_init)+ht+wt_in_pounds+lbm+BMI+factor(alcohol)+factor(bleed)+factor(liver)+factor(obpul)+factor(renal)+factor(heart)+factor(chd)+factor(diab)+factor(hyper)+factor(peptic)+factor(valv)+factor(fall)+factor(hip)+factor(inrcat)+factor(albcat)+factor(crecat)+factor(crpcat)+factor(race3)+factor(safe_comp)+time_safe_comp+factor(eff_comp)+time_eff_comp|medcat, data=datsub)
knitr::opts_chunk$set(echo = F,warning = F,message = F)
# rmarkdown::render(input_file="Macarius.Rmd", output_file="Updated anticoagulant data analysis result 02192021.html")
library(survRM2)
library(plyr)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(biostat3)
library(table1)
setwd("C:/Users/ni.304/Box Sync/Collaboration/Macarius Donneyong - anticoagulants project/Data")
options(stringsAsFactors=F)
rawdat=read.csv("C:/Users/ni.304/Box Sync/Collaboration/Macarius Donneyong - anticoagulants project/Data/Original_Dataset_Mar30_working.csv")
# rawdat=rename(rawdat, c("normalized.mutation.burden"="tmb.norm"))
# rawdat2=read.csv("C:/Users/ni.304/Box Sync/Collaboration/Macarius Donneyong - anticoagulants project/Data/New folder/anticoag_MD.csv")
dat=rawdat[!grepl("HEPARIN",rawdat$medication_name, fixed=T),] # exclude pts on heparin
dat$med=ifelse(grepl("WARFARIN",dat$medication_name, fixed=T), 0, 1)
dat$medcat=factor(ifelse(dat$med==0, "warfarin","DOACs"))
dat$medcat=factor(dat$medcat, levels=c(levels(dat$medcat), "P-value", "Overall"))
# dat=merge(dat, rawdat2[,c("MRNNO","lbm")], by="MRNNO", all.x=T, all.y=F)
# dat$lbm[dat$lbm<=0]=NA
# write.csv(table(dat$RACE), "race.csv", row.names = F)
# write.csv(table(dat$ETHNICITY), "eth.csv", row.names = F)
## group race into three levels: white, black, other according to Macarius's email on 2/10/2021
dat$race3=ifelse(dat$RACE=="WHITE", 0, ifelse(dat$RACE %in% c("AFRICAN AMERICAN/BLK","AFRICAN OTHER","MIDDLE EASTERN NORTHERN AFRICAN","SOMALI"), 1,2))
dat$race4=ifelse(dat$RACE=="WHITE", 0, ifelse(dat$RACE %in% c("AFRICAN AMERICAN/BLK","AFRICAN OTHER","MIDDLE EASTERN NORTHERN AFRICAN","SOMALI"), 1,ifelse(dat$RACE %in% c("ASIAN CAMBODIAN","ASIAN CHINESE","ASIAN INDIAN","ASIAN JAPANESE","ASIAN KOREAN","ASIAN LAOTIAN","ASIAN OTHER","ASIAN PAKISTANI","ASIAN VIETNAMESE","NEPALI"),2,3)))
dat$gender=ifelse(dat$GENDER=="Female",1,0)
dat$yr_ant_init=ifelse(is.na(dat$Year_of_anticoag_index_dt),1900, dat$Year_of_anticoag_index_dt)
dat$alcohol=0
dat$alcohol[dat$Alcohol.dependence=="Y"]=1
dat$bleed=0
dat$bleed[dat$Bleeding.disorders=="Y"]=1
dat$liver=0
dat$liver[dat$Chronic.liver.disease=="Y"]=1
dat$obpul=0
dat$obpul[dat$Chronic.obstructive.pulmonary.disease=="Y"]=1
dat$renal=0
dat$renal[dat$Renal.Disease=="Y"]=1
dat$heart=0
dat$heart[dat$Congestive.heart.failure=="Y"]=1
dat$chd=0
dat$chd[dat$CORONARY.HEART.DISEASE=="Y"]=1
dat$diab=0
dat$diab[dat$Diabetes=="Y"]=1
dat$hyper=0
dat$hyper[dat$Hypertension=="Y"]=1
dat$peptic=0
dat$peptic[dat$Peptic.ulcer=="Y"]=1
dat$valv=0
dat$valv[dat$Valvular.heart.disease=="Y"]=1
dat$fall=0
dat$fall[dat$Falls.or.hip.fractures=="Y"]=1
dat$hip=0
dat$hip[dat$Hip.or.knee.replacement.operations=="Y"]=1
dat$date_start=as.Date(dat$DAY_STARTED, "%m/%d/%Y")
dat$date_gasbleed=ifelse(dat$Date_Gastro_Bleeding=="","12/31/2019", dat$Date_Gastro_Bleeding)
dat$date_gasbleed=as.Date(dat$date_gasbleed, "%m/%d/%Y")
dat$gasbleed=0
dat$gasbleed[dat$Gastrointestinal.Bleeding=="Gastrointestinal Bleeding"]=1
dat$time_gasbleed=as.numeric(dat$date_gasbleed - dat$date_start)/365.25
dat$time_gasbleed[dat$time_gasbleed<0]=0
dat$date_intrableed=ifelse(dat$Date_Intracranial_hemorrhage=="","12/31/2019", dat$Date_Intracranial_hemorrhage)
dat$date_intrableed=as.Date(dat$date_intrableed, "%m/%d/%Y")
dat$intrableed=0
dat$intrableed[dat$Intracranial.hemorrhage=="Intracranial hemorrhage"]=1
dat$time_intrableed=as.numeric(dat$date_intrableed - dat$date_start)/365.25
dat$time_intrableed[dat$time_intrableed<0]=0
dat$date_vte=ifelse(dat$VTE_DATE=="","12/31/2019", dat$VTE_DATE)
dat$date_vte=as.Date(dat$date_vte, "%m/%d/%Y")
dat$vte=0
dat$vte[dat$VTE=="Venous Thromboembolism"]=1
dat$time_vte=as.numeric(dat$date_vte - dat$date_start)/365.25
dat$time_vte[dat$time_vte<0]=0
dat$date_ais=ifelse(dat$Acute_Ischemic_Stroke_DATE=="","12/31/2019", dat$Acute_Ischemic_Stroke_DATE)
dat$date_ais=as.Date(dat$date_ais, "%m/%d/%Y")
dat$ais=0
dat$ais[dat$Acute.Ischemic.Stroke=="Acute Ischemic Stroke"]=1
dat$time_ais=as.numeric(dat$date_ais - dat$date_start)/365.25
dat$time_ais[dat$time_ais<0]=0
dat$date_stroke=ifelse(dat$Major_Stroke_DATE=="","12/31/2019", dat$Major_Stroke_DATE)
dat$date_stroke=as.Date(dat$date_stroke, "%m/%d/%Y")
dat$stroke=0
dat$stroke[dat$Major.Stroke=="Major Stroke"]=1
dat$time_stroke=as.numeric(dat$date_stroke - dat$date_start)/365.25
dat$time_stroke[dat$time_stroke<0]=0
dat$date_mi=ifelse(dat$Myocardial_infarction_DATE=="","12/31/2019", dat$Myocardial_infarction_DATE)
dat$date_mi=as.Date(dat$date_mi, "%m/%d/%Y")
dat$mi=0
dat$mi[dat$Myocardial.infarction=="Myocardial infarction"]=1
dat$time_mi=as.numeric(dat$date_mi - dat$date_start)/365.25
dat$time_mi[dat$time_mi<0]=0
dat$date_hosp=ifelse(dat$Earlist_Hospitalization_dt=="","12/31/2019", dat$Earlist_Hospitalization_dt)
dat$date_hosp=as.Date(dat$date_hosp, "%m/%d/%Y")
dat$hosp=0
dat$hosp[dat$Hospitalization=="Y"]=1
dat$time_hosp=as.numeric(dat$date_hosp - dat$date_start)/365.25
dat$time_hosp[dat$time_hosp<0]=0
dat$date_death=ifelse(dat$DEATH_DATE=="","12/31/2019", dat$DEATH_DATE)
dat$date_death=as.Date(dat$date_death, "%m/%d/%Y")
dat$death=0
dat$death[dat$death_flag=="Y"]=1
dat$time_death=as.numeric(dat$date_death - dat$date_start)/365.25
dat$time_death[dat$time_death<0]=0
dat$safe_comp=1*((dat$gasbleed+dat$intrableed)>=1)
dat$time_safe_comp=min(dat$time_gasbleed, dat$time_intrableed)
dat$eff_comp=1*((dat$vte+dat$ais+dat$stroke+dat$mi+dat$hosp+dat$death)>=1)
dat$time_eff_comp=min(dat$time_vte, dat$time_ais, dat$time_stroke, dat$time_mi, dat$time_hosp, dat$time_death)
## cap wt at 300lbs and ht at 6.5" according to Macarius's email on 2/10/2021
dat$BMI[dat$BMI>200 & !is.na(dat$BMI)]=NA
dat$ht=sqrt(dat$wt_in_pounds*703/dat$BMI)
dat=dat[(dat$ht<=77 | is.na(dat$ht)) & (dat$wt_in_pounds<=300 | is.na(dat$wt_in_pounds)),]
dat$ht[dat$ht<50 & !is.na(dat$ht)]=NA
dat$htcm=dat$ht*2.54 # height in cm
dat$lbm=-14.729-0.071*dat$PT_AGE+0.210*dat$htcm+0.468*dat$wt_in_pounds+1.821*(dat$race3==1)+2.96
## categorize confounders according to Macarius's email on 2/10/2021
dat$inr=as.numeric(dat$INR_VALUE)
dat$inrcat[dat$inr<2 | dat$INR_VALUE=="<1.0"]=0
dat$inrcat[dat$inr>=2 & dat$inr<=3]=1
dat$inrcat[dat$inr>3 & dat$inr<4.9]=2
dat$inrcat[dat$inr>=4.9 | dat$INR_VALUE %in% c(">14.4",">14.7",">14.9",">15.0",">7.0")]=3
dat$inrcat[is.na(dat$inr)]=4
dat$cre=as.numeric(dat$Creatinine_VALUE)
dat$crecat[dat$cre<0.63 | dat$Creatinine_VALUE %in% c("<0.20","<0.30")]=0
dat$crecat[dat$cre>=0.63 & dat$cre<=1.16]=1
dat$crecat[dat$cre>1.16 | dat$Creatinine_VALUE %in% c(">25.00",">300")]=2
dat$crecat[is.na(dat$cre)]=3
dat$alb=as.numeric(dat$ALBUMIN_VALUE)
dat$albcat[dat$alb<3.4 | dat$ALBUMIN_VALUE %in% c("<1.0","<1.3","<1.5","<2.0","<3")]=0
dat$albcat[dat$alb>=3.4 & dat$alb<=5.4]=1
dat$albcat[dat$alb>5.4 | dat$ALBUMIN_VALUE==">4500.0"]=2
dat$albcat[is.na(dat$alb)]=3
dat$crp=as.numeric(dat$C_REACTIVE_PROTIEN_VALUE)
dat$crpcat[dat$crp<0.3 | dat$C_REACTIVE_PROTIEN_VALUE %in% c("<0.2","<0.20")]=0
dat$crpcat[dat$crp>=0.3 & dat$crp<=1]=1
dat$crpcat[dat$crp>1 & dat$crp<=10]=2
dat$crpcat[dat$crp>10]=3
dat$crpcat[is.na(dat$crp)]=4
datsub_bmi=na.omit(dat[,c("MRNNO","PT_AGE","GENDER","yr_ant_init", "race4", "ht", "wt_in_pounds", "BMI", "alcohol", "bleed", "liver", "obpul", "renal", "heart", "chd", "diab","hyper", "peptic", "valv", "fall", "hip", "inrcat", "albcat", "crecat", "crpcat", "gender","med","time_safe_comp", "safe_comp","time_eff_comp", "eff_comp")])
datsub_lbm=na.omit(dat[,c("MRNNO","PT_AGE","GENDER","yr_ant_init", "race4", "ht", "wt_in_pounds", "lbm", "alcohol", "bleed", "liver", "obpul", "renal", "heart", "chd", "diab","hyper", "peptic", "valv", "fall", "hip", "inrcat", "albcat", "crecat", "crpcat", "gender","med","time_safe_comp", "safe_comp","time_eff_comp", "eff_comp")])
datsub=na.omit(dat[,c("MRNNO","PT_AGE","GENDER","yr_ant_init", "race4", "ht", "wt_in_pounds", "lbm","BMI", "alcohol", "bleed", "liver", "obpul", "renal", "heart", "chd", "diab","hyper", "peptic", "valv", "fall", "hip", "inrcat", "albcat", "crecat", "crpcat", "gender","med","time_safe_comp", "safe_comp","time_eff_comp", "eff_comp")])
## function to calculate p value for Table 1
# rndr <- function(x, name, ...) {
#     if (length(x) == 0) {
#         y <- dat[[name]]
#         s <- rep("", length(render.default(x=y, name=name, ...)))
#         if (is.numeric(y)) {
#             p <- t.test(y ~ dat$medcat)$p.value
#         } else {
#             p <- chisq.test(table(y, dat$medcat))$p.value
#         }
#         s[2] <- sub("<", "&lt;", format.pval(p, digits=3, eps=0.001))
#         s
#     } else {
#         render.default(x=x, name=name, ...)
#     }
# }
#
# rndr.strat <- function(label, n, ...) {
#     ifelse(n==0, label, render.strat.default(label, n, ...))
# }
## propensity score estimation
# PS with BMI
datsub_bmi$ps_bmi=glm(med~PT_AGE+factor(yr_ant_init)+factor(race4)+BMI+alcohol+bleed+liver+obpul+renal+heart+chd+diab
+hyper+peptic+valv+fall+hip+factor(inrcat)+factor(albcat)+factor(crecat)+factor(crpcat)+gender, data=datsub_bmi, family="binomial")$fitted.values
datsub_bmi$ipw_bmi=ifelse(datsub_bmi$med==1, 1/datsub_bmi$ps_bmi, 1/(1-datsub_bmi$ps_bmi))
#datsub_bmi=datsub_bmi[datsub_bmi$ipw_bmi<150,]
# PS with LBM
datsub_lbm$ps_lbm=glm(med~PT_AGE+factor(yr_ant_init)+factor(race4)+lbm+alcohol+bleed+liver+obpul+renal+heart+chd+diab
+hyper+peptic+valv+fall+hip+factor(inrcat)+factor(albcat)+factor(crecat)+factor(crpcat)+gender, data=datsub_lbm, family="binomial")$fitted.values
datsub_lbm$ipw_lbm=ifelse(datsub_lbm$med==1, 1/datsub_lbm$ps_lbm, 1/(1-datsub_lbm$ps_lbm))
# PS with both BMI and LBM
datsub$ps=glm(med~PT_AGE+factor(yr_ant_init)+factor(race4)+lbm+BMI+alcohol+bleed+liver+obpul+renal+heart+chd+diab
+hyper+peptic+valv+fall+hip+factor(inrcat)+factor(albcat)+factor(crecat)+factor(crpcat)+gender, data=datsub, family="binomial")$fitted.values
datsub$ipw=ifelse(datsub$med==1, 1/datsub$ps, 1/(1-datsub$ps))
table1(~PT_AGE+factor(GENDER)+factor(yr_ant_init)+ht+wt_in_pounds+lbm+BMI+factor(alcohol)+factor(bleed)+factor(liver)+factor(obpul)+factor(renal)+factor(heart)+factor(chd)+factor(diab)+factor(hyper)+factor(peptic)+factor(valv)+factor(fall)+factor(hip)+factor(inrcat)+factor(albcat)+factor(crecat)+factor(crpcat)+factor(race4)+factor(safe_comp)+time_safe_comp+factor(eff_comp)+time_eff_comp|medcat, data=datsub)
datsub_bmi=na.omit(dat[,c("MRNNO","PT_AGE","GENDER","yr_ant_init", "race4", "ht", "wt_in_pounds", "BMI", "alcohol", "bleed", "liver", "obpul", "renal", "heart", "chd", "diab","hyper", "peptic", "valv", "fall", "hip", "inrcat", "albcat", "crecat", "crpcat", "gender","med","medcat","time_safe_comp", "safe_comp","time_eff_comp", "eff_comp")])
datsub_lbm=na.omit(dat[,c("MRNNO","PT_AGE","GENDER","yr_ant_init", "race4", "ht", "wt_in_pounds", "lbm", "alcohol", "bleed", "liver", "obpul", "renal", "heart", "chd", "diab","hyper", "peptic", "valv", "fall", "hip", "inrcat", "albcat", "crecat", "crpcat", "gender","med","medcat","time_safe_comp", "safe_comp","time_eff_comp", "eff_comp")])
datsub=na.omit(dat[,c("MRNNO","PT_AGE","GENDER","yr_ant_init", "race4", "ht", "wt_in_pounds", "lbm","BMI", "alcohol", "bleed", "liver", "obpul", "renal", "heart", "chd", "diab","hyper", "peptic", "valv", "fall", "hip", "inrcat", "albcat", "crecat", "crpcat", "gender","med","medcat","time_safe_comp", "safe_comp","time_eff_comp", "eff_comp")])
table1(~PT_AGE+factor(GENDER)+factor(yr_ant_init)+ht+wt_in_pounds+lbm+BMI+factor(alcohol)+factor(bleed)+factor(liver)+factor(obpul)+factor(renal)+factor(heart)+factor(chd)+factor(diab)+factor(hyper)+factor(peptic)+factor(valv)+factor(fall)+factor(hip)+factor(inrcat)+factor(albcat)+factor(crecat)+factor(crpcat)+factor(race4)+factor(safe_comp)+time_safe_comp+factor(eff_comp)+time_eff_comp|medcat, data=datsub)
hist(datsub$time_eff_comp)
hist(dat$time_safe_comp)
head(dat$time_safe_comp)
head(dat$time_gasbleed)
hist(dat$time_gasbleed)
hist(dat$time_intrableed)
hist(dat$time_safe_comp)
dat$time_safe_comp=min(dat$time_gasbleed, dat$time_intrableed)
hist(dat$time_safe_comp)
dat[1:10,c("time_gasbleed","time_intrableed")]
aa=dat[1:10,c("time_gasbleed","time_intrableed")]
bb=min(aa)
bb
dat$time_safe_comp=apply(dat[,c("time_gasbleed","time_intrableed")],1,min)
dat[1:10,c("time_gasbleed","time_intrableed","time_safe_comp")]
rawdat=read.csv("C:/Users/ni.304/Box Sync/Collaboration/Macarius Donneyong - anticoagulants project/Data/Original_Dataset_Mar30_working.csv")
# rawdat=rename(rawdat, c("normalized.mutation.burden"="tmb.norm"))
# rawdat2=read.csv("C:/Users/ni.304/Box Sync/Collaboration/Macarius Donneyong - anticoagulants project/Data/New folder/anticoag_MD.csv")
dat=rawdat[!grepl("HEPARIN",rawdat$medication_name, fixed=T),] # exclude pts on heparin
dat$med=ifelse(grepl("WARFARIN",dat$medication_name, fixed=T), 0, 1)
dat$medcat=factor(ifelse(dat$med==0, "warfarin","DOACs"))
dat$medcat=factor(dat$medcat, levels=c(levels(dat$medcat), "P-value", "Overall"))
# dat=merge(dat, rawdat2[,c("MRNNO","lbm")], by="MRNNO", all.x=T, all.y=F)
# dat$lbm[dat$lbm<=0]=NA
# write.csv(table(dat$RACE), "race.csv", row.names = F)
# write.csv(table(dat$ETHNICITY), "eth.csv", row.names = F)
## group race into three levels: white, black, other according to Macarius's email on 2/10/2021
dat$race3=ifelse(dat$RACE=="WHITE", 0, ifelse(dat$RACE %in% c("AFRICAN AMERICAN/BLK","AFRICAN OTHER","MIDDLE EASTERN NORTHERN AFRICAN","SOMALI"), 1,2))
dat$race4=ifelse(dat$RACE=="WHITE", 0, ifelse(dat$RACE %in% c("AFRICAN AMERICAN/BLK","AFRICAN OTHER","MIDDLE EASTERN NORTHERN AFRICAN","SOMALI"), 1,ifelse(dat$RACE %in% c("ASIAN CAMBODIAN","ASIAN CHINESE","ASIAN INDIAN","ASIAN JAPANESE","ASIAN KOREAN","ASIAN LAOTIAN","ASIAN OTHER","ASIAN PAKISTANI","ASIAN VIETNAMESE","NEPALI"),2,3)))
dat$gender=ifelse(dat$GENDER=="Female",1,0)
dat$yr_ant_init=ifelse(is.na(dat$Year_of_anticoag_index_dt),1900, dat$Year_of_anticoag_index_dt)
dat$alcohol=0
dat$alcohol[dat$Alcohol.dependence=="Y"]=1
dat$bleed=0
dat$bleed[dat$Bleeding.disorders=="Y"]=1
dat$liver=0
dat$liver[dat$Chronic.liver.disease=="Y"]=1
dat$obpul=0
dat$obpul[dat$Chronic.obstructive.pulmonary.disease=="Y"]=1
dat$renal=0
dat$renal[dat$Renal.Disease=="Y"]=1
dat$heart=0
dat$heart[dat$Congestive.heart.failure=="Y"]=1
dat$chd=0
dat$chd[dat$CORONARY.HEART.DISEASE=="Y"]=1
dat$diab=0
dat$diab[dat$Diabetes=="Y"]=1
dat$hyper=0
dat$hyper[dat$Hypertension=="Y"]=1
dat$peptic=0
dat$peptic[dat$Peptic.ulcer=="Y"]=1
dat$valv=0
dat$valv[dat$Valvular.heart.disease=="Y"]=1
dat$fall=0
dat$fall[dat$Falls.or.hip.fractures=="Y"]=1
dat$hip=0
dat$hip[dat$Hip.or.knee.replacement.operations=="Y"]=1
dat$date_start=as.Date(dat$DAY_STARTED, "%m/%d/%Y")
dat$date_gasbleed=ifelse(dat$Date_Gastro_Bleeding=="","12/31/2019", dat$Date_Gastro_Bleeding)
dat$date_gasbleed=as.Date(dat$date_gasbleed, "%m/%d/%Y")
dat$gasbleed=0
dat$gasbleed[dat$Gastrointestinal.Bleeding=="Gastrointestinal Bleeding"]=1
dat$time_gasbleed=as.numeric(dat$date_gasbleed - dat$date_start)/365.25
dat$time_gasbleed[dat$time_gasbleed<0]=0
dat$date_intrableed=ifelse(dat$Date_Intracranial_hemorrhage=="","12/31/2019", dat$Date_Intracranial_hemorrhage)
dat$date_intrableed=as.Date(dat$date_intrableed, "%m/%d/%Y")
dat$intrableed=0
dat$intrableed[dat$Intracranial.hemorrhage=="Intracranial hemorrhage"]=1
dat$time_intrableed=as.numeric(dat$date_intrableed - dat$date_start)/365.25
dat$time_intrableed[dat$time_intrableed<0]=0
dat$date_vte=ifelse(dat$VTE_DATE=="","12/31/2019", dat$VTE_DATE)
dat$date_vte=as.Date(dat$date_vte, "%m/%d/%Y")
dat$vte=0
dat$vte[dat$VTE=="Venous Thromboembolism"]=1
dat$time_vte=as.numeric(dat$date_vte - dat$date_start)/365.25
dat$time_vte[dat$time_vte<0]=0
dat$date_ais=ifelse(dat$Acute_Ischemic_Stroke_DATE=="","12/31/2019", dat$Acute_Ischemic_Stroke_DATE)
dat$date_ais=as.Date(dat$date_ais, "%m/%d/%Y")
dat$ais=0
dat$ais[dat$Acute.Ischemic.Stroke=="Acute Ischemic Stroke"]=1
dat$time_ais=as.numeric(dat$date_ais - dat$date_start)/365.25
dat$time_ais[dat$time_ais<0]=0
dat$date_stroke=ifelse(dat$Major_Stroke_DATE=="","12/31/2019", dat$Major_Stroke_DATE)
dat$date_stroke=as.Date(dat$date_stroke, "%m/%d/%Y")
dat$stroke=0
dat$stroke[dat$Major.Stroke=="Major Stroke"]=1
dat$time_stroke=as.numeric(dat$date_stroke - dat$date_start)/365.25
dat$time_stroke[dat$time_stroke<0]=0
dat$date_mi=ifelse(dat$Myocardial_infarction_DATE=="","12/31/2019", dat$Myocardial_infarction_DATE)
dat$date_mi=as.Date(dat$date_mi, "%m/%d/%Y")
dat$mi=0
dat$mi[dat$Myocardial.infarction=="Myocardial infarction"]=1
dat$time_mi=as.numeric(dat$date_mi - dat$date_start)/365.25
dat$time_mi[dat$time_mi<0]=0
dat$date_hosp=ifelse(dat$Earlist_Hospitalization_dt=="","12/31/2019", dat$Earlist_Hospitalization_dt)
dat$date_hosp=as.Date(dat$date_hosp, "%m/%d/%Y")
dat$hosp=0
dat$hosp[dat$Hospitalization=="Y"]=1
dat$time_hosp=as.numeric(dat$date_hosp - dat$date_start)/365.25
dat$time_hosp[dat$time_hosp<0]=0
dat$date_death=ifelse(dat$DEATH_DATE=="","12/31/2019", dat$DEATH_DATE)
dat$date_death=as.Date(dat$date_death, "%m/%d/%Y")
dat$death=0
dat$death[dat$death_flag=="Y"]=1
dat$time_death=as.numeric(dat$date_death - dat$date_start)/365.25
dat$time_death[dat$time_death<0]=0
dat$safe_comp=1*((dat$gasbleed+dat$intrableed)>=1)
dat$time_safe_comp=apply(dat[,c("time_gasbleed","time_intrableed")],1,min)
dat$eff_comp=1*((dat$vte+dat$ais+dat$stroke+dat$mi+dat$hosp+dat$death)>=1)
dat$time_eff_comp=apply(dat[,c("time_vte", "time_ais", "time_stroke", "time_mi", "time_hosp", "time_death")],1,min)
## cap wt at 300lbs and ht at 6.5" according to Macarius's email on 2/10/2021
dat$BMI[dat$BMI>200 & !is.na(dat$BMI)]=NA
dat$ht=sqrt(dat$wt_in_pounds*703/dat$BMI)
dat=dat[(dat$ht<=77 | is.na(dat$ht)) & (dat$wt_in_pounds<=300 | is.na(dat$wt_in_pounds)),]
dat$ht[dat$ht<50 & !is.na(dat$ht)]=NA
dat$htcm=dat$ht*2.54 # height in cm
dat$lbm=-14.729-0.071*dat$PT_AGE+0.210*dat$htcm+0.468*dat$wt_in_pounds+1.821*(dat$race3==1)+2.96
## categorize confounders according to Macarius's email on 2/10/2021
dat$inr=as.numeric(dat$INR_VALUE)
dat$inrcat[dat$inr<2 | dat$INR_VALUE=="<1.0"]=0
dat$inrcat[dat$inr>=2 & dat$inr<=3]=1
dat$inrcat[dat$inr>3 & dat$inr<4.9]=2
dat$inrcat[dat$inr>=4.9 | dat$INR_VALUE %in% c(">14.4",">14.7",">14.9",">15.0",">7.0")]=3
dat$inrcat[is.na(dat$inr)]=4
dat$cre=as.numeric(dat$Creatinine_VALUE)
dat$crecat[dat$cre<0.63 | dat$Creatinine_VALUE %in% c("<0.20","<0.30")]=0
dat$crecat[dat$cre>=0.63 & dat$cre<=1.16]=1
dat$crecat[dat$cre>1.16 | dat$Creatinine_VALUE %in% c(">25.00",">300")]=2
dat$crecat[is.na(dat$cre)]=3
dat$alb=as.numeric(dat$ALBUMIN_VALUE)
dat$albcat[dat$alb<3.4 | dat$ALBUMIN_VALUE %in% c("<1.0","<1.3","<1.5","<2.0","<3")]=0
dat$albcat[dat$alb>=3.4 & dat$alb<=5.4]=1
dat$albcat[dat$alb>5.4 | dat$ALBUMIN_VALUE==">4500.0"]=2
dat$albcat[is.na(dat$alb)]=3
dat$crp=as.numeric(dat$C_REACTIVE_PROTIEN_VALUE)
dat$crpcat[dat$crp<0.3 | dat$C_REACTIVE_PROTIEN_VALUE %in% c("<0.2","<0.20")]=0
dat$crpcat[dat$crp>=0.3 & dat$crp<=1]=1
dat$crpcat[dat$crp>1 & dat$crp<=10]=2
dat$crpcat[dat$crp>10]=3
dat$crpcat[is.na(dat$crp)]=4
datsub_bmi=na.omit(dat[,c("MRNNO","PT_AGE","GENDER","yr_ant_init", "race4", "ht", "wt_in_pounds", "BMI", "alcohol", "bleed", "liver", "obpul", "renal", "heart", "chd", "diab","hyper", "peptic", "valv", "fall", "hip", "inrcat", "albcat", "crecat", "crpcat", "gender","med","medcat","time_safe_comp", "safe_comp","time_eff_comp", "eff_comp")])
datsub_lbm=na.omit(dat[,c("MRNNO","PT_AGE","GENDER","yr_ant_init", "race4", "ht", "wt_in_pounds", "lbm", "alcohol", "bleed", "liver", "obpul", "renal", "heart", "chd", "diab","hyper", "peptic", "valv", "fall", "hip", "inrcat", "albcat", "crecat", "crpcat", "gender","med","medcat","time_safe_comp", "safe_comp","time_eff_comp", "eff_comp")])
datsub=na.omit(dat[,c("MRNNO","PT_AGE","GENDER","yr_ant_init", "race4", "ht", "wt_in_pounds", "lbm","BMI", "alcohol", "bleed", "liver", "obpul", "renal", "heart", "chd", "diab","hyper", "peptic", "valv", "fall", "hip", "inrcat", "albcat", "crecat", "crpcat", "gender","med","medcat","time_safe_comp", "safe_comp","time_eff_comp", "eff_comp")])
## function to calculate p value for Table 1
# rndr <- function(x, name, ...) {
#     if (length(x) == 0) {
#         y <- dat[[name]]
#         s <- rep("", length(render.default(x=y, name=name, ...)))
#         if (is.numeric(y)) {
#             p <- t.test(y ~ dat$medcat)$p.value
#         } else {
#             p <- chisq.test(table(y, dat$medcat))$p.value
#         }
#         s[2] <- sub("<", "&lt;", format.pval(p, digits=3, eps=0.001))
#         s
#     } else {
#         render.default(x=x, name=name, ...)
#     }
# }
#
# rndr.strat <- function(label, n, ...) {
#     ifelse(n==0, label, render.strat.default(label, n, ...))
# }
## propensity score estimation
# PS with BMI
datsub_bmi$ps_bmi=glm(med~PT_AGE+factor(yr_ant_init)+factor(race4)+BMI+alcohol+bleed+liver+obpul+renal+heart+chd+diab
+hyper+peptic+valv+fall+hip+factor(inrcat)+factor(albcat)+factor(crecat)+factor(crpcat)+gender, data=datsub_bmi, family="binomial")$fitted.values
datsub_bmi$ipw_bmi=ifelse(datsub_bmi$med==1, 1/datsub_bmi$ps_bmi, 1/(1-datsub_bmi$ps_bmi))
#datsub_bmi=datsub_bmi[datsub_bmi$ipw_bmi<150,]
# PS with LBM
datsub_lbm$ps_lbm=glm(med~PT_AGE+factor(yr_ant_init)+factor(race4)+lbm+alcohol+bleed+liver+obpul+renal+heart+chd+diab
+hyper+peptic+valv+fall+hip+factor(inrcat)+factor(albcat)+factor(crecat)+factor(crpcat)+gender, data=datsub_lbm, family="binomial")$fitted.values
datsub_lbm$ipw_lbm=ifelse(datsub_lbm$med==1, 1/datsub_lbm$ps_lbm, 1/(1-datsub_lbm$ps_lbm))
# PS with both BMI and LBM
datsub$ps=glm(med~PT_AGE+factor(yr_ant_init)+factor(race4)+lbm+BMI+alcohol+bleed+liver+obpul+renal+heart+chd+diab
+hyper+peptic+valv+fall+hip+factor(inrcat)+factor(albcat)+factor(crecat)+factor(crpcat)+gender, data=datsub, family="binomial")$fitted.values
datsub$ipw=ifelse(datsub$med==1, 1/datsub$ps, 1/(1-datsub$ps))
table1(~PT_AGE+factor(GENDER)+factor(yr_ant_init)+ht+wt_in_pounds+lbm+BMI+factor(alcohol)+factor(bleed)+factor(liver)+factor(obpul)+factor(renal)+factor(heart)+factor(chd)+factor(diab)+factor(hyper)+factor(peptic)+factor(valv)+factor(fall)+factor(hip)+factor(inrcat)+factor(albcat)+factor(crecat)+factor(crpcat)+factor(race4)+factor(safe_comp)+time_safe_comp+factor(eff_comp)+time_eff_comp|medcat, data=datsub)
range(dat$time_vte)
range(dat$time_ais)
range(dat$time_stroke)
range(dat$time_mi)
dat[10,c("time_vte", "time_ais", "time_stroke", "time_mi", "time_hosp", "time_death")]
dat[1:10,c("time_vte", "time_ais", "time_stroke", "time_mi", "time_hosp", "time_death")]
hist(dat$time_hosp)
summary(dat$time_vte)
summary(dat$time_ais)
summary(dat$time_stroke)
summary(dat$time_mi)
summary(dat$time_death)
summary(dat$time_hosp)
library(PRECISION.survival)
sim1=survival.simulation(be.survival, he, nonzero_position=c(385,866,1010,2218,2660,3026),
b0value=c(1.04,1.40,1.45,1.62,3.13,1.76), t_sort_train=0, t_sort_test=0,
t_rev=0, he_train=1, he_test=0, norm_type=1, norm_train=1, norm_test=1, nsim=4)
setwd("C:/Users/ni.304/OneDrive - The Ohio State University/MSK/Projects/Li-Xuan Qin - papers on her research/R package")
be.survival=read.csv("be.survival.csv")
save(be.survival, file="be.survival.RData")
setwd("C:/Users/ni.304/OneDrive - The Ohio State University/MSK/Projects/Li-Xuan Qin - papers on her research/R package/PRECISION.survival")
devtools::install()
